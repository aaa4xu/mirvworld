diff --git a/src/core/execution/MIRVExecution.ts b/src/core/execution/MIRVExecution.ts
index 41e617f8..0c7d25ca 100644
--- a/src/core/execution/MIRVExecution.ts
+++ b/src/core/execution/MIRVExecution.ts
@@ -171,7 +171,6 @@ export class MirvExecution implements Execution {
       }
       return tile;
     }
-    console.log("couldn't find place, giving up");
     return null;
   }
 
diff --git a/src/core/execution/NukeExecution.ts b/src/core/execution/NukeExecution.ts
index facdbb64..7ad20c0e 100644
--- a/src/core/execution/NukeExecution.ts
+++ b/src/core/execution/NukeExecution.ts
@@ -161,7 +161,6 @@ export class NukeExecution implements Execution {
 
     // make the nuke unactive if it was intercepted
     if (!this.nuke.isActive()) {
-      consolex.log(`Nuke destroyed before reaching target`);
       this.active = false;
       return;
     }
diff --git a/src/core/execution/QuickChatExecution.ts b/src/core/execution/QuickChatExecution.ts
index 7489cec8..3d6a0861 100644
--- a/src/core/execution/QuickChatExecution.ts
+++ b/src/core/execution/QuickChatExecution.ts
@@ -55,10 +55,6 @@ export class QuickChatExecution implements Execution {
       this.recipient.name(),
     );
 
-    consolex.log(
-      `[QuickChat] ${this.sender.name} â†’ ${this.recipient.name}: ${message}`,
-    );
-
     this.active = false;
   }
 
diff --git a/src/core/execution/TradeShipExecution.ts b/src/core/execution/TradeShipExecution.ts
index 231b3a87..727f78b8 100644
--- a/src/core/execution/TradeShipExecution.ts
+++ b/src/core/execution/TradeShipExecution.ts
@@ -1,5 +1,4 @@
 import { renderNumber } from "../../client/Utils";
-import { consolex } from "../Consolex";
 import {
   Execution,
   Game,
@@ -42,7 +41,6 @@ export class TradeShipExecution implements Execution {
         this.srcPort.tile(),
       );
       if (spawn === false) {
-        consolex.warn(`cannot build trade ship`);
         this.active = false;
         return;
       }
@@ -117,7 +115,6 @@ export class TradeShipExecution implements Execution {
         this.tilesTraveled++;
         break;
       case PathFindResultType.PathNotFound:
-        consolex.warn("captured trade ship cannot find route");
         if (this.tradeShip.isActive()) {
           this.tradeShip.delete(false);
         }
diff --git a/src/core/execution/TransportShipExecution.ts b/src/core/execution/TransportShipExecution.ts
index d4032643..42dc9d54 100644
--- a/src/core/execution/TransportShipExecution.ts
+++ b/src/core/execution/TransportShipExecution.ts
@@ -122,7 +122,6 @@ export class TransportShipExecution implements Execution {
       this.dst,
     );
     if (closestTileSrc === false) {
-      consolex.warn(`can't build transport ship`);
       this.active = false;
       return;
     }
diff --git a/src/core/execution/WarshipExecution.ts b/src/core/execution/WarshipExecution.ts
index 43233bd9..4992b8d0 100644
--- a/src/core/execution/WarshipExecution.ts
+++ b/src/core/execution/WarshipExecution.ts
@@ -267,9 +267,6 @@ export class WarshipExecution implements Execution {
       }
       return tile;
     }
-    console.warn(
-      `Failed to find random tile for warship for ${this.warship.owner().name()}`,
-    );
     if (!allowShoreline) {
       // If we failed to find a tile on the ocean, try again but allow shoreline
       return this.randomTile(true);
